name: 🧠 Advanced AI Pipeline - Multi-Model Intelligence

on:
  issues:
    types: [opened, edited, closed, labeled, assigned]
  pull_request:
    types: [opened, edited, closed, merged, review_requested]
  issue_comment:
    types: [created]
  push:
    branches: [main, dev]
  release:
    types: [published]
  schedule:
    - cron: '0 0 * * 0'  # Weekly analysis

env:
  SAGE_AI_VERSION: "2.0"
  REPO_CONTEXT: "SAGE-OS: Self-Aware General Environment Operating System"

jobs:
  # 🎯 Multi-Model Issue Triage & Auto-Assignment
  intelligent-triage:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' && github.event_name == 'issues'
    
    permissions:
      issues: write
      models: read
      contents: read
      repository-projects: write

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for context

      - name: 🔍 Repository Context Analysis
        id: repo-context
        uses: actions/ai-inference@v1
        with:
          model: openai/openai/gpt-4o
          prompt: |
            Analyze the SAGE-OS repository structure and recent activity to provide context.
            
            Repository: ${{ github.repository }}
            Recent commits: $(git log --oneline -10)
            Directory structure: $(find . -type f -name "*.c" -o -name "*.h" -o -name "*.S" -o -name "*.md" | head -20)
            
            Provide a brief context about:
            1. Current development focus
            2. Recent changes
            3. Active components
            4. Known issues patterns

      - name: 🎯 Advanced Issue Classification
        id: classification
        uses: actions/ai-inference@v1
        with:
          model: microsoft/phi-4  # Best for complex reasoning
          prompt: |
            You are SAGE-AI, the advanced AI system for SAGE-OS repository management.
            
            **Repository Context:**
            ${{ steps.repo-context.outputs.response }}
            
            **Issue to Analyze:**
            Title: ${{ github.event.issue.title }}
            Body: ${{ github.event.issue.body }}
            Author: ${{ github.event.issue.user.login }}
            
            Provide comprehensive analysis:
            
            ## 🎯 Classification
            - **Type**: [Bug Report|Feature Request|Documentation|Build Issue|Performance|Security|Question]
            - **Severity**: [Critical|High|Medium|Low]
            - **Complexity**: [Simple|Moderate|Complex|Research Required]
            - **Component**: [Kernel|Drivers|Build System|AI Subsystem|Documentation|QEMU|macOS Support]
            
            ## 👥 Assignment Recommendation
            Based on the issue type and complexity, recommend:
            - **Primary Assignee**: [Core Team|Community|Specific Expertise Needed]
            - **Estimated Effort**: [1-2 hours|Half day|1-2 days|1+ weeks]
            - **Prerequisites**: [Any dependencies or requirements]
            
            ## 🏷️ Labels
            Suggest specific labels (comma-separated)
            
            ## 📋 Action Plan
            Provide 3-5 specific next steps for resolving this issue.

      - name: 🤖 Technical Deep Dive
        id: technical-analysis
        if: contains(github.event.issue.body, '```') || contains(github.event.issue.title, 'build') || contains(github.event.issue.title, 'compile') || contains(github.event.issue.title, 'error')
        uses: actions/ai-inference@v1
        with:
          model: mistral-ai/codestral-2501  # Code specialist
          prompt: |
            Perform technical analysis of this SAGE-OS issue:
            
            **Issue**: ${{ github.event.issue.title }}
            **Details**: ${{ github.event.issue.body }}
            
            **SAGE-OS Context:**
            - Embedded OS for Raspberry Pi and x86
            - Multi-architecture support (i386, x86_64, ARM64, RISC-V)
            - AI integration subsystem
            - Custom bootloader and kernel
            
            Analyze for:
            1. **Code Issues**: Syntax, logic, architecture-specific problems
            2. **Build Problems**: Makefile, linker, cross-compilation issues
            3. **Runtime Issues**: Memory, hardware compatibility, QEMU emulation
            4. **Suggested Fixes**: Specific code changes or debugging steps
            5. **Testing Strategy**: How to verify the fix

      - name: 👥 Auto-Assignment Logic
        id: assignment
        uses: actions/ai-inference@v1
        with:
          model: openai/openai/gpt-4o-mini  # Fast for decision making
          prompt: |
            Based on this analysis, determine the best assignee for this SAGE-OS issue:
            
            **Classification**: ${{ steps.classification.outputs.response }}
            **Technical Analysis**: ${{ steps.technical-analysis.outputs.response }}
            
            **Team Structure:**
            - @AshishYesale7 - Core maintainer, architecture, AI subsystem
            - @community-contributors - General issues, documentation
            - @build-specialists - Build system, cross-compilation
            - @hardware-experts - Raspberry Pi, hardware drivers
            
            **Assignment Rules:**
            - Critical/Security issues → @AshishYesale7
            - Build system issues → @build-specialists  
            - Hardware/drivers → @hardware-experts
            - Documentation → @community-contributors
            - AI subsystem → @AshishYesale7
            
            Return only the GitHub username (e.g., "AshishYesale7") or "community" for community assignment.

      - name: 📊 Create Issue Analysis Report
        run: |
          cat << 'EOF' > issue-analysis.md
          # 🧠 SAGE-AI Advanced Analysis Report
          
          ## 🎯 Classification & Triage
          ${{ steps.classification.outputs.response }}
          
          ## 🔧 Technical Analysis
          ${{ steps.technical-analysis.outputs.response }}
          
          ## 📈 Repository Context
          ${{ steps.repo-context.outputs.response }}
          
          ---
          
          **🤖 Analysis by**: SAGE-AI v${{ env.SAGE_AI_VERSION }}  
          **⏰ Generated**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")  
          **🔗 Issue**: #${{ github.event.issue.number }}
          
          ### 🚀 Quick Actions
          - [ ] Review technical analysis
          - [ ] Verify suggested labels
          - [ ] Confirm assignment
          - [ ] Add to project board
          - [ ] Set milestone if applicable
          
          *This analysis helps prioritize and route issues efficiently. Please review and adjust as needed.*
          EOF
          
          gh issue comment ${{ github.event.issue.number }} --body-file issue-analysis.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Apply Intelligent Labels
        run: |
          # Extract labels from classification
          LABELS=$(echo '${{ steps.classification.outputs.response }}' | grep -o 'Labels:.*' | sed 's/Labels: //' | head -1)
          if [ ! -z "$LABELS" ]; then
            echo "Applying AI-suggested labels: $LABELS"
            gh issue edit ${{ github.event.issue.number }} --add-label "$LABELS"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 👥 Auto-Assign Issue
        run: |
          ASSIGNEE="${{ steps.assignment.outputs.response }}"
          if [ "$ASSIGNEE" != "community" ] && [ ! -z "$ASSIGNEE" ]; then
            echo "Auto-assigning to: $ASSIGNEE"
            gh issue edit ${{ github.event.issue.number }} --assignee "$ASSIGNEE"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 📈 Context-Aware Progress Tracking
  progress-tracker:
    runs-on: ubuntu-latest
    if: github.event.action == 'labeled' || github.event.action == 'assigned' || github.event.action == 'closed'
    
    permissions:
      issues: write
      models: read
      contents: read

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📊 Progress Analysis
        id: progress
        uses: actions/ai-inference@v1
        with:
          model: openai/openai/gpt-4o-mini
          prompt: |
            Analyze the progress of this SAGE-OS issue:
            
            **Issue**: ${{ github.event.issue.title }}
            **Current State**: ${{ github.event.action }}
            **Labels**: ${{ join(github.event.issue.labels.*.name, ', ') }}
            **Assignees**: ${{ join(github.event.issue.assignees.*.login, ', ') }}
            **Comments**: ${{ github.event.issue.comments }} comments
            **Created**: ${{ github.event.issue.created_at }}
            **Updated**: ${{ github.event.issue.updated_at }}
            
            Provide:
            1. **Progress Status**: [Not Started|In Progress|Blocked|Under Review|Completed]
            2. **Next Steps**: What should happen next
            3. **Estimated Completion**: Based on complexity and current progress
            4. **Blockers**: Any potential issues or dependencies
            5. **Recommendations**: Actionable suggestions

      - name: 📈 Update Progress Tracking
        if: github.event.action != 'closed'
        run: |
          cat << 'EOF' > progress-update.md
          ## 📈 Progress Update - SAGE-AI Tracking
          
          ${{ steps.progress.outputs.response }}
          
          ---
          **🤖 Automated tracking by SAGE-AI** | **⏰ Updated**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          EOF
          
          gh issue comment ${{ github.event.issue.number }} --body-file progress-update.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 🎉 AI-Generated Release Notes
  release-notes-generator:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    
    permissions:
      contents: write
      models: read
      issues: read
      pull-requests: read

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📊 Gather Release Data
        id: release-data
        run: |
          # Get latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          
          # Get commits since last tag
          COMMITS=$(git log $LATEST_TAG..HEAD --oneline --no-merges | head -20)
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          # Get closed issues since last release
          SINCE_DATE=$(git log -1 --format=%ci $LATEST_TAG 2>/dev/null || date -d "30 days ago" +%Y-%m-%d)
          echo "since_date=$SINCE_DATE" >> $GITHUB_OUTPUT

      - name: 🎉 Generate Release Notes
        id: release-notes
        uses: actions/ai-inference@v1
        with:
          model: openai/gpt-4o  # Best for comprehensive documentation
          prompt: |
            Generate professional release notes for SAGE-OS based on recent activity:
            
            **Project**: SAGE-OS (Self-Aware General Environment Operating System)
            **Latest Tag**: ${{ steps.release-data.outputs.latest_tag }}
            **Since Date**: ${{ steps.release-data.outputs.since_date }}
            
            **Recent Commits**:
            ${{ steps.release-data.outputs.commits }}
            
            **Repository Context**: Embedded OS with AI integration for Raspberry Pi and x86 systems
            
            Create release notes with:
            
            ## 🚀 SAGE-OS Release Notes
            
            ### ✨ New Features
            [List major new features]
            
            ### 🔧 Improvements
            [List enhancements and optimizations]
            
            ### 🐛 Bug Fixes
            [List bug fixes]
            
            ### 🏗️ Build System
            [Build system changes]
            
            ### 📚 Documentation
            [Documentation updates]
            
            ### 🎯 Platform Support
            [Platform-specific changes]
            
            ### ⚠️ Breaking Changes
            [Any breaking changes]
            
            ### 🙏 Contributors
            [Acknowledge contributors]
            
            Make it professional, informative, and exciting for users!

      - name: 📝 Save Release Notes
        run: |
          mkdir -p docs/releases
          cat << 'EOF' > docs/releases/release-notes-$(date +%Y%m%d).md
          ${{ steps.release-notes.outputs.response }}
          
          ---
          **Generated by**: SAGE-AI v${{ env.SAGE_AI_VERSION }}  
          **Date**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          EOF
          
          # Also update main release notes
          cat << 'EOF' > RELEASE_NOTES.md
          ${{ steps.release-notes.outputs.response }}
          EOF

      - name: 📤 Commit Release Notes
        run: |
          git config user.name "SAGE-AI Bot"
          git config user.email "sage-ai@sage-os.dev"
          git add docs/releases/ RELEASE_NOTES.md
          git commit -m "📝 Auto-generated release notes by SAGE-AI" || exit 0
          git push

  # 🔄 Weekly Repository Analysis
  weekly-analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    permissions:
      issues: write
      models: read
      contents: read
      discussions: write

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📊 Repository Health Analysis
        id: health-check
        uses: actions/ai-inference@v1
        with:
          model: microsoft/phi-4  # Best for analytical thinking
          prompt: |
            Perform a comprehensive weekly health analysis of the SAGE-OS repository:
            
            **Repository**: ${{ github.repository }}
            **Analysis Date**: $(date -u +"%Y-%m-%d")
            
            **Recent Activity** (last 7 days):
            - Commits: $(git log --since="7 days ago" --oneline | wc -l)
            - Files changed: $(git diff --name-only HEAD~7..HEAD | wc -l)
            - Contributors: $(git log --since="7 days ago" --format="%an" | sort -u | wc -l)
            
            **Open Issues**: $(gh issue list --state open --json number | jq length)
            **Open PRs**: $(gh pr list --state open --json number | jq length)
            
            Analyze and provide:
            
            ## 📊 Repository Health Report
            
            ### 🎯 Development Velocity
            [Analysis of commit frequency, PR merge rate, issue resolution]
            
            ### 🐛 Issue Trends
            [Common issue types, resolution time, backlog health]
            
            ### 👥 Community Engagement
            [Contributor activity, new contributors, community growth]
            
            ### 🔧 Technical Debt
            [Code quality observations, potential improvements]
            
            ### 📈 Recommendations
            [Specific actionable recommendations for next week]
            
            ### 🎯 Focus Areas
            [Suggested priorities for the development team]
            
            Make it data-driven and actionable!

      - name: 📋 Create Weekly Report
        run: |
          cat << 'EOF' > weekly-report.md
          # 📊 SAGE-OS Weekly Health Report
          
          ${{ steps.health-check.outputs.response }}
          
          ---
          
          **🤖 Generated by**: SAGE-AI v${{ env.SAGE_AI_VERSION }}  
          **📅 Report Date**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")  
          **🔄 Next Report**: $(date -d "+7 days" -u +"%Y-%m-%d")
          
          ### 📞 Actions Required
          - [ ] Review recommendations
          - [ ] Address high-priority issues
          - [ ] Update project roadmap
          - [ ] Community engagement activities
          EOF
          
          # Create as GitHub Discussion
          gh api repos/${{ github.repository }}/discussions \
            --method POST \
            --field title="📊 Weekly Repository Health Report - $(date +%Y-%m-%d)" \
            --field body="$(cat weekly-report.md)" \
            --field category_id="$(gh api repos/${{ github.repository }}/discussions/categories --jq '.[] | select(.name=="General") | .id')"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 🎯 Smart PR Analysis & Review
  pr-intelligence:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'edited')
    
    permissions:
      pull-requests: write
      models: read
      contents: read

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔍 PR Impact Analysis
        id: pr-analysis
        uses: actions/ai-inference@v1
        with:
          model: openai/gpt-4o
          prompt: |
            Analyze this SAGE-OS pull request for impact and quality:
            
            **PR Title**: ${{ github.event.pull_request.title }}
            **Description**: ${{ github.event.pull_request.body }}
            **Author**: ${{ github.event.pull_request.user.login }}
            **Files Changed**: ${{ github.event.pull_request.changed_files }}
            **Additions**: +${{ github.event.pull_request.additions }}
            **Deletions**: -${{ github.event.pull_request.deletions }}
            
            **Changed Files**: $(gh pr diff ${{ github.event.pull_request.number }} --name-only)
            
            Provide comprehensive analysis:
            
            ## 🎯 PR Impact Assessment
            
            ### 📊 Change Summary
            [Summarize what this PR does]
            
            ### 🎯 Impact Areas
            [Which components are affected: Kernel, Drivers, Build System, etc.]
            
            ### ⚠️ Risk Assessment
            [Low/Medium/High risk and why]
            
            ### 🧪 Testing Recommendations
            [Specific tests that should be run]
            
            ### 📋 Review Checklist
            [Key things reviewers should focus on]
            
            ### 🚀 Deployment Considerations
            [Any special deployment or compatibility notes]

      - name: 💬 Post PR Analysis
        run: |
          cat << 'EOF' > pr-analysis.md
          # 🧠 SAGE-AI PR Analysis
          
          ${{ steps.pr-analysis.outputs.response }}
          
          ---
          
          **🤖 Analysis by**: SAGE-AI v${{ env.SAGE_AI_VERSION }}  
          **⏰ Generated**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          
          ### 🔄 Auto-Actions Taken
          - ✅ Impact analysis completed
          - ✅ Risk assessment performed
          - ✅ Testing recommendations provided
          
          *This analysis helps reviewers focus on the most important aspects of the PR.*
          EOF
          
          gh pr comment ${{ github.event.pull_request.number }} --body-file pr-analysis.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}