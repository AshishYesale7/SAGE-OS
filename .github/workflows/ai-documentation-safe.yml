name: 📚 SAGE-AI Documentation (Safe Mode)

on:
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, edited]
  workflow_dispatch:

jobs:
  generate-documentation:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      issues: write
      pull-requests: write
      models: read

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📚 Generate Documentation with AI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EVENT_NAME: ${{ github.event_name }}
          ISSUE_TITLE: ${{ github.event.issue.title || github.event.pull_request.title }}
          ISSUE_BODY: ${{ github.event.issue.body || github.event.pull_request.body }}
        run: |
          echo "📚 Generating AI documentation..."
          
          python3 << 'EOF'
          import os
          import json
          import requests
          
          # Configuration
          GITHUB_TOKEN = os.environ.get('GITHUB_TOKEN')
          EVENT_NAME = os.environ.get('EVENT_NAME')
          ISSUE_TITLE = os.environ.get('ISSUE_TITLE', '')
          ISSUE_BODY = os.environ.get('ISSUE_BODY', '')
          
          def call_github_models_api(prompt):
              """Call GitHub Models API for documentation generation"""
              headers = {
                  'Authorization': f'Bearer {GITHUB_TOKEN}',
                  'Content-Type': 'application/json',
                  'api-version': '2024-08-01-preview'
              }
              
              data = {
                  'model': 'openai/gpt-4o-mini',
                  'messages': [
                      {
                          'role': 'system',
                          'content': 'You are a technical documentation expert specializing in operating systems and embedded development. Generate clear, helpful documentation for SAGE-OS development activities.'
                      },
                      {
                          'role': 'user',
                          'content': prompt
                      }
                  ],
                  'max_tokens': 2000,
                  'temperature': 0.3
              }
              
              try:
                  response = requests.post('https://models.inference.ai.azure.com/chat/completions', 
                                         headers=headers, 
                                         json=data, 
                                         timeout=30)
                  response.raise_for_status()
                  result = response.json()
                  return result['choices'][0]['message']['content']
              except Exception as e:
                  return f"Error generating documentation: {str(e)}"
          
          # Generate documentation
          prompt = f"""
          Generate helpful documentation for this SAGE-OS activity:
          
          **Repository**: SAGE-OS (Self-Aware General Environment Operating System)
          **Context**: Embedded OS with AI integration for Raspberry Pi and x86 systems
          
          **Activity Details:**
          - Event: {EVENT_NAME}
          - Title: {ISSUE_TITLE}
          - Body: {ISSUE_BODY}
          
          **Generate:**
          1. **Summary**: Brief overview of the activity
          2. **Technical Context**: Relevant technical details
          3. **Documentation Links**: Suggest relevant documentation
          4. **Next Steps**: Recommended actions
          
          Keep response helpful and concise for SAGE-OS development.
          """
          
          documentation = call_github_models_api(prompt)
          
          # Save documentation
          with open('/tmp/ai_documentation.md', 'w') as f:
              f.write(f"## 📚 AI-Generated Documentation\n\n")
              f.write(f"**Event**: {EVENT_NAME}\n")
              f.write(f"**Title**: {ISSUE_TITLE}\n\n")
              f.write(documentation)
          
          # Set environment variable for next step
          with open(os.environ['GITHUB_ENV'], 'a') as f:
              f.write(f"AI_DOCUMENTATION<<EOF\n{documentation}\nEOF\n")
          
          print("✅ AI documentation generated successfully!")
          EOF

      - name: 💬 Post Documentation
        run: |
          cat << 'EOF' > documentation.md
          ## 📚 AI-Generated Documentation
          
          ${{ steps.docs.outputs.response }}
          
          ---
          
          **🔗 SAGE-OS Resources:**
          - [Main Repository](https://github.com/AshishYesale7/SAGE-OS)
          - [Build Instructions](https://github.com/AshishYesale7/SAGE-OS/blob/main/BUILD.md)
          - [QEMU Setup Guide](https://github.com/AshishYesale7/SAGE-OS/blob/main/QEMU_MACOS_M1_COMPLETE_GUIDE.md)
          
          **🤖 Generated by**: SAGE-AI Documentation System  
          **⏰ Generated**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          EOF
          
          # Post to issue or PR
          if [ "${{ github.event_name }}" = "issues" ]; then
            gh issue comment ${{ github.event.issue.number }} --body-file documentation.md
            echo "✅ Posted documentation to issue #${{ github.event.issue.number }}"
          elif [ "${{ github.event_name }}" = "pull_request" ]; then
            gh pr comment ${{ github.event.pull_request.number }} --body-file documentation.md
            echo "✅ Posted documentation to PR #${{ github.event.pull_request.number }}"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Create documentation artifact (no git push)
  create-docs-artifact:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    permissions:
      contents: read

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📊 Generate Repository Documentation
        id: repo-docs
        uses: actions/ai-inference@v1
        with:
          model: gpt-4o-mini
          prompt: |
            Generate comprehensive documentation for the SAGE-OS repository:
            
            **Repository Analysis:**
            - Name: SAGE-OS (Self-Aware General Environment Operating System)
            - Purpose: Embedded OS with AI integration
            - Platforms: Raspberry Pi, x86 systems
            - Architecture: Multi-architecture support
            
            **Generate:**
            1. **Project Overview**: What SAGE-OS is and its goals
            2. **Key Features**: Main capabilities and features
            3. **Architecture**: System architecture overview
            4. **Getting Started**: Quick start guide
            5. **Development**: How to contribute
            
            Create professional, comprehensive documentation.

      - name: 📝 Create Documentation Files
        run: |
          mkdir -p docs/generated
          
          # Create main documentation
          cat << 'EOF' > docs/generated/README.md
          # 🧠 SAGE-OS Documentation
          
          ${{ steps.repo-docs.outputs.response }}
          
          ---
          
          **📅 Generated**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")  
          **🤖 Generated by**: SAGE-AI Documentation System  
          **🔄 Update Frequency**: On-demand via workflow dispatch
          EOF
          
          # Create index file
          cat << 'EOF' > docs/generated/index.html
          <!DOCTYPE html>
          <html>
          <head>
              <title>SAGE-OS Documentation</title>
              <meta charset="UTF-8">
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; margin: 40px; }
                  .container { max-width: 800px; margin: 0 auto; }
                  h1 { color: #0366d6; }
                  .timestamp { color: #586069; font-size: 0.9em; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>🧠 SAGE-OS Documentation</h1>
                  <div class="timestamp">Generated: $(date -u +"%Y-%m-%d %H:%M:%S UTC")</div>
                  <div id="content">
                      <!-- Documentation content would go here -->
                      <p>AI-generated documentation for SAGE-OS development.</p>
                  </div>
              </div>
          </body>
          </html>
          EOF

      - name: 📤 Upload Documentation Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sage-os-documentation
          path: docs/generated/
          retention-days: 30

      - name: ✅ Documentation Complete
        run: |
          echo "✅ Documentation generation completed"
          echo "📁 Files created in docs/generated/"
          echo "📦 Artifact uploaded: sage-os-documentation"
          echo "🔗 Download from workflow run artifacts"